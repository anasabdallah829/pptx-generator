import streamlit as st
import os
import zipfile
import io
import tempfile
from pptx import Presentation
from pptx.util import Inches
from pptx.enum.shapes import MSO_SHAPE

# ุงูุชุฏุงุฏุงุช ูููุงุช ุงูุตูุฑ ุงูููุจููุฉ
IMAGE_EXTENSIONS = ('.png', '.jpg', '.jpeg', '.gif', '.bmp')

def find_images_in_folder(folder_path):
    """
    ูุจุญุซ ุนู ุฌููุน ูููุงุช ุงูุตูุฑ ุจุงูุชุฏุงุฏุงุช ูุณููุญ ุจูุง ูู ุงููุณุงุฑ ุงููุญุฏุฏ.

    :param folder_path: ุงููุณุงุฑ ุฅูู ุงููุฌูุฏ.
    :return: ูุงุฆูุฉ ุจุฌููุน ุงููุณุงุฑุงุช ุงููุงููุฉ ููููุงุช ุงูุตูุฑ ุงูุชู ุชู ุงูุนุซูุฑ ุนูููุงุ ูุฑุชุจุฉ ุฃุจุฌุฏูุงู.
    """
    images = []
    for item in os.listdir(folder_path):
        if item.lower().endswith(IMAGE_EXTENSIONS):
            images.append(os.path.join(folder_path, item))
    return sorted(images)

def process_files_with_template(zip_file, pptx_file):
    """
    ูุนุงูุฌ ูููุงุช ZIP ู PPTX ุจุงุณุชุฎุฏุงู ุงูุดุฑูุญุฉ ุงูุฃููู ููุงูุจ.

    - ูุณุชุฎุฑุฌ ุฎุตุงุฆุต ุงูุตูุฑ ูุงูุนููุงู ูู ุงูุดุฑูุญุฉ ุงูุฃููู.
    - ููุดุฆ ุดุฑูุญุฉ ุฌุฏูุฏุฉ ููู ูุฌูุฏุ ููุณุชุฎุฏู ุงูุฎุตุงุฆุต ุงููุฎุฒูุฉ ููุถุน ุงูุตูุฑ ูู ุงููุฌูุฏ.
    
    :param zip_file: ูุงุฆู ููู Streamlit ุงููุฑููุน ูููู ZIP.
    :param pptx_file: ูุงุฆู ููู Streamlit ุงููุฑููุน ูููู PPTX.
    :return: ูุงุฆู BytesIO ูููู PPTX ุงููุนุฏูุ ุฃู None ูู ุญุงูุฉ ุงููุดู.
    """
    try:
        # ุชุญููู ุงูุนุฑุถ ุงูุชูุฏููู ูู ูุงุฆู ุงูููู ุงููุฑููุน
        prs = Presentation(pptx_file)
        
        # ุงูุชุฃูุฏ ูู ูุฌูุฏ ุดุฑุงุฆุญ ูู ุงูุนุฑุถ ุงูุชูุฏููู
        if not prs.slides:
            raise ValueError("ููู PowerPoint ูุง ูุญุชูู ุนูู ุฃู ุดุฑุงุฆุญ.")

        # --- ุงูุฎุทูุฉ 1: ุงุณุชุฎูุงุต ุฎุตุงุฆุต ุงูุตูุฑ ูุงูุนููุงู ูู ุงูุดุฑูุญุฉ ุงูุฃููู ---
        template_slide = prs.slides[0]
        image_properties = []
        title_shape_properties = None

        for shape in template_slide.shapes:
            if shape.has_text_frame and shape.is_placeholder and shape.placeholder_format.type == 1: # MSO_SHAPE.PLACEHOLDER
                 title_shape_properties = {
                    "left": shape.left,
                    "top": shape.top,
                    "width": shape.width,
                    "height": shape.height,
                    "text_frame": shape.text_frame,
                    "font_size": shape.text_frame.paragraphs[0].font.size
                 }
            elif shape.shape_type == MSO_SHAPE.PICTURE:
                image_properties.append({
                    "left": shape.left,
                    "top": shape.top,
                    "width": shape.width,
                    "height": shape.height
                })

        st.info(f"ุชู ุงูุนุซูุฑ ุนูู {len(image_properties)} ุตูุฑุฉ ูู ุงูุดุฑูุญุฉ ุงูุฃููู ููุงูุจ.")
        
        # --- ุงูุฎุทูุฉ 2: ูุนุงูุฌุฉ ุงูููู ุงููุถุบูุท ูุฅูุดุงุก ุงูุดุฑุงุฆุญ ---
        with tempfile.TemporaryDirectory() as temp_dir:
            zip_content = io.BytesIO(zip_file.read())
            with zipfile.ZipFile(zip_content, 'r') as zip_ref:
                zip_ref.extractall(temp_dir)
            
            folders = [d for d in os.listdir(temp_dir) if os.path.isdir(os.path.join(temp_dir, d)) and not d.startswith('.')]
            
            # ุญุฐู ุงูุดุฑูุญุฉ ุงูุฃููู (ุงููุงูุจ) ุจุนุฏ ุงุณุชุฎูุงุต ุฎุตุงุฆุตูุง
            prs.slides._sldIdLst.remove(prs.slides._sldIdLst[0])

            # ุงููุฑูุฑ ุนูู ูู ูุฌูุฏ ูุฅูุดุงุก ุดุฑูุญุฉ ุฌุฏูุฏุฉ
            for folder_name in sorted(folders):
                folder_path = os.path.join(temp_dir, folder_name)
                st.info(f"ุฌุงุฑู ูุนุงูุฌุฉ ุงููุฌูุฏ: **{folder_name}**")
                
                # ุฅูุดุงุก ุดุฑูุญุฉ ุฌุฏูุฏุฉ
                slide = prs.slides.add_slide(prs.slide_layouts[6]) # ุงุณุชุฎุฏุงู ุชุฎุทูุท ูุงุฑุบ ุชูุงููุง
                
                # ุฅุถุงูุฉ ุงูุนููุงู ุจูุงุกู ุนูู ุฎุตุงุฆุต ุงูุดุฑูุญุฉ ุงูุฃููู
                if title_shape_properties:
                    title_shape = slide.shapes.add_textbox(
                        title_shape_properties["left"],
                        title_shape_properties["top"],
                        title_shape_properties["width"],
                        title_shape_properties["height"]
                    )
                    title_shape.text = f"ูุฌูุฏ: {folder_name}"
                    
                # ุงูุจุญุซ ุนู ุงูุตูุฑ ูู ุงููุฌูุฏ
                folder_images = find_images_in_folder(folder_path)
                
                # ุฅุถุงูุฉ ุงูุตูุฑ ูุน ุงูุญูุงุธ ุนูู ุฃูุงูู ูุฃุญุฌุงู ุงููุงูุจ
                num_images_to_add = min(len(image_properties), len(folder_images))
                if num_images_to_add > 0:
                    for i in range(num_images_to_add):
                        img_prop = image_properties[i]
                        img_path = folder_images[i]
                        slide.shapes.add_picture(
                            img_path,
                            img_prop["left"],
                            img_prop["top"],
                            width=img_prop["width"],
                            height=img_prop["height"]
                        )
                    st.success(f"ุชูุช ุฅุถุงูุฉ {num_images_to_add} ุตูุฑุฉ ุฅูู ุดุฑูุญุฉ ุงููุฌูุฏ **{folder_name}**.")
                else:
                    st.warning(f"ูู ูุชู ุงูุนุซูุฑ ุนูู ุตูุฑ ูู ุงููุฌูุฏ **{folder_name}**ุ ุฃู ุฃู ุงููุงูุจ ูุง ูุญุชูู ุนูู ุตูุฑ.")

            # ุญูุธ ุงูุนุฑุถ ุงูุชูุฏููู ุงููุนุฏู ูู ุงูุฐุงูุฑุฉ
            output_stream = io.BytesIO()
            prs.save(output_stream)
            output_stream.seek(0)
            
            return output_stream
        
    except ValueError as ve:
        st.error(f"ุฎุทุฃ ูู ุงูููู: {ve}")
        return None
    except Exception as e:
        st.error(f"ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน: {e}")
        return None

# --- ูุงุฌูุฉ ุงููุณุชุฎุฏู ูุชุทุจูู Streamlit ---
st.set_page_config(page_title="ุฃุฏุงุฉ ูุนุงูุฌุฉ ูุฌูุฏุงุช PowerPoint", layout="centered")
st.title("ุฃุฏุงุฉ ูุนุงูุฌุฉ ูุฌูุฏุงุช PowerPoint ๐๐ผ๏ธ")
st.markdown("---")

st.write(
    "ูุฐู ุงูุฃุฏุงุฉ ุชุณุชุฎุฏู **ุงูุดุฑูุญุฉ ุงูุฃููู** ูู ููู PowerPoint ููุงูุจ. ุณูุชู ุฅูุดุงุก ุดุฑูุญุฉ ุฌุฏูุฏุฉ "
    "ููู ูุฌูุฏ ูู ุงูููู ุงููุถุบูุทุ ูุน ุงุณุชุจุฏุงู ุงูุนููุงู ูุงูุตูุฑ ุจูุงุกู ุนูู ูุญุชูู ุงููุฌูุฏุ ูุน ุงูุญูุงุธ ุนูู ุฃูุงูููุง ูุฃุญุฌุงููุง ุงูุฃุตููุฉ."
)

# ุนูุงุตุฑ ุฑูุน ุงููููุงุช
zip_file_upload = st.file_uploader("1. ูู ุจุฑูุน ููู ZIP:", type=["zip"])
pptx_file_upload = st.file_uploader("2. ูู ุจุฑูุน ููู PowerPoint (.pptx):", type=["pptx"])

# ุฒุฑ ุงููุนุงูุฌุฉ
if st.button("ูุนุงูุฌุฉ ูุฅูุดุงุก ุงูุนุฑุถ ุงูุชูุฏููู"):
    if zip_file_upload is not None and pptx_file_upload is not None:
        with st.spinner("ุฌุงุฑู ูุนุงูุฌุฉ ุงููููุงุช ูุฅูุดุงุก ุงูุนุฑุถ ุงูุชูุฏููู ุงูุฌุฏูุฏ... ๐"):
            modified_pptx_stream = process_files_with_template(zip_file_upload, pptx_file_upload)
            
            if modified_pptx_stream:
                st.success("ุงูุชููุช ุงููุนุงูุฌุฉ ุจูุฌุงุญ! ูููู ุฌุงูุฒ ููุชูุฒูู. ๐")
                # ุฒุฑ ุชูุฒูู ุงูููู ุงููุนุฏู
                st.download_button(
                    label="ุชูุฒูู ููู PPTX ุงููุนุฏู",
                    data=modified_pptx_stream,
                    file_name="modified_presentation_with_template.pptx",
                    mime="application/vnd.openxmlformats-officedocument.presentationml.presentation"
                )
            else:
                st.error("ูุดูุช ุงููุนุงูุฌุฉ. ูุฑุฌู ุงูุชุฃูุฏ ูู ุชูุณููุงุช ุงููููุงุช ููุญุชููุงุชูุง ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.")
    else:
        st.warning("ูุฌุจ ุฑูุน ูู ูู ููู ZIP ูููู PPTX ูููุชุงุจุนุฉ.")
